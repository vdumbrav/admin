/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'
import { Route as AuthenticatedQuestsIndexRouteImport } from './routes/_authenticated/quests/index'
import { Route as AuthenticatedQuestsNewRouteImport } from './routes/_authenticated/quests/new'
import { Route as AuthenticatedQuestsIdRouteImport } from './routes/_authenticated/quests/$id'
import { Route as AuthenticatedQuestsNewPresetRouteImport } from './routes/_authenticated/quests/new/$preset'

const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthenticatedQuestsIndexRoute =
  AuthenticatedQuestsIndexRouteImport.update({
    id: '/quests/',
    path: '/quests/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedQuestsNewRoute = AuthenticatedQuestsNewRouteImport.update({
  id: '/quests/new',
  path: '/quests/new',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedQuestsIdRoute = AuthenticatedQuestsIdRouteImport.update({
  id: '/quests/$id',
  path: '/quests/$id',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedQuestsNewPresetRoute =
  AuthenticatedQuestsNewPresetRouteImport.update({
    id: '/$preset',
    path: '/$preset',
    getParentRoute: () => AuthenticatedQuestsNewRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/quests/$id': typeof AuthenticatedQuestsIdRoute
  '/quests/new': typeof AuthenticatedQuestsNewRouteWithChildren
  '/quests': typeof AuthenticatedQuestsIndexRoute
  '/quests/new/$preset': typeof AuthenticatedQuestsNewPresetRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/quests/$id': typeof AuthenticatedQuestsIdRoute
  '/quests/new': typeof AuthenticatedQuestsNewRouteWithChildren
  '/quests': typeof AuthenticatedQuestsIndexRoute
  '/quests/new/$preset': typeof AuthenticatedQuestsNewPresetRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/_authenticated/quests/$id': typeof AuthenticatedQuestsIdRoute
  '/_authenticated/quests/new': typeof AuthenticatedQuestsNewRouteWithChildren
  '/_authenticated/quests/': typeof AuthenticatedQuestsIndexRoute
  '/_authenticated/quests/new/$preset': typeof AuthenticatedQuestsNewPresetRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/sign-in'
    | '/auth/callback'
    | '/quests/$id'
    | '/quests/new'
    | '/quests'
    | '/quests/new/$preset'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/sign-in'
    | '/auth/callback'
    | '/quests/$id'
    | '/quests/new'
    | '/quests'
    | '/quests/new/$preset'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/auth'
    | '/sign-in'
    | '/auth/callback'
    | '/_authenticated/quests/$id'
    | '/_authenticated/quests/new'
    | '/_authenticated/quests/'
    | '/_authenticated/quests/new/$preset'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  SignInRoute: typeof SignInRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_authenticated/quests/': {
      id: '/_authenticated/quests/'
      path: '/quests'
      fullPath: '/quests'
      preLoaderRoute: typeof AuthenticatedQuestsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/quests/new': {
      id: '/_authenticated/quests/new'
      path: '/quests/new'
      fullPath: '/quests/new'
      preLoaderRoute: typeof AuthenticatedQuestsNewRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/quests/$id': {
      id: '/_authenticated/quests/$id'
      path: '/quests/$id'
      fullPath: '/quests/$id'
      preLoaderRoute: typeof AuthenticatedQuestsIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/quests/new/$preset': {
      id: '/_authenticated/quests/new/$preset'
      path: '/$preset'
      fullPath: '/quests/new/$preset'
      preLoaderRoute: typeof AuthenticatedQuestsNewPresetRouteImport
      parentRoute: typeof AuthenticatedQuestsNewRoute
    }
  }
}

interface AuthenticatedQuestsNewRouteChildren {
  AuthenticatedQuestsNewPresetRoute: typeof AuthenticatedQuestsNewPresetRoute
}

const AuthenticatedQuestsNewRouteChildren: AuthenticatedQuestsNewRouteChildren =
  {
    AuthenticatedQuestsNewPresetRoute: AuthenticatedQuestsNewPresetRoute,
  }

const AuthenticatedQuestsNewRouteWithChildren =
  AuthenticatedQuestsNewRoute._addFileChildren(
    AuthenticatedQuestsNewRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedQuestsIdRoute: typeof AuthenticatedQuestsIdRoute
  AuthenticatedQuestsNewRoute: typeof AuthenticatedQuestsNewRouteWithChildren
  AuthenticatedQuestsIndexRoute: typeof AuthenticatedQuestsIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedQuestsIdRoute: AuthenticatedQuestsIdRoute,
  AuthenticatedQuestsNewRoute: AuthenticatedQuestsNewRouteWithChildren,
  AuthenticatedQuestsIndexRoute: AuthenticatedQuestsIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface AuthRouteRouteChildren {
  AuthCallbackRoute: typeof AuthCallbackRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthCallbackRoute: AuthCallbackRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  SignInRoute: SignInRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
