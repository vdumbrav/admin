/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as QuestsIndexRouteImport } from './routes/quests/index'
import { Route as QuestsNewRouteImport } from './routes/quests/new'
import { Route as Quests_layoutRouteImport } from './routes/quests/__layout'
import { Route as QuestsIdRouteImport } from './routes/quests/$id'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'

const QuestsRouteImport = createFileRoute('/quests')()

const QuestsRoute = QuestsRouteImport.update({
  id: '/quests',
  path: '/quests',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const QuestsIndexRoute = QuestsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => QuestsRoute,
} as any)
const QuestsNewRoute = QuestsNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => QuestsRoute,
} as any)
const Quests_layoutRoute = Quests_layoutRouteImport.update({
  id: '/__layout',
  getParentRoute: () => QuestsRoute,
} as any)
const QuestsIdRoute = QuestsIdRouteImport.update({
  id: '/quests/$id',
  path: '/quests/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/quests/$id': typeof QuestsIdRoute
  '/quests': typeof Quests_layoutRoute
  '/quests/new': typeof QuestsNewRoute
  '/quests/': typeof QuestsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/quests/$id': typeof QuestsIdRoute
  '/quests': typeof QuestsIndexRoute
  '/quests/new': typeof QuestsNewRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/quests/$id': typeof QuestsIdRoute
  '/quests': typeof QuestsRouteWithChildren
  '/quests/__layout': typeof Quests_layoutRoute
  '/quests/new': typeof QuestsNewRoute
  '/quests/': typeof QuestsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/quests/$id'
    | '/quests'
    | '/quests/new'
    | '/quests/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/quests/$id'
    | '/quests'
    | '/quests/new'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/quests/$id'
    | '/quests'
    | '/quests/__layout'
    | '/quests/new'
    | '/quests/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  QuestsIdRoute: typeof QuestsIdRoute
  QuestsRoute: typeof QuestsRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/quests': {
      id: '/quests'
      path: '/quests'
      fullPath: '/quests'
      preLoaderRoute: typeof QuestsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quests/': {
      id: '/quests/'
      path: '/'
      fullPath: '/quests/'
      preLoaderRoute: typeof QuestsIndexRouteImport
      parentRoute: typeof QuestsRoute
    }
    '/quests/new': {
      id: '/quests/new'
      path: '/new'
      fullPath: '/quests/new'
      preLoaderRoute: typeof QuestsNewRouteImport
      parentRoute: typeof QuestsRoute
    }
    '/quests/__layout': {
      id: '/quests/__layout'
      path: '/quests'
      fullPath: '/quests'
      preLoaderRoute: typeof Quests_layoutRouteImport
      parentRoute: typeof QuestsRoute
    }
    '/quests/$id': {
      id: '/quests/$id'
      path: '/quests/$id'
      fullPath: '/quests/$id'
      preLoaderRoute: typeof QuestsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface QuestsRouteChildren {
  Quests_layoutRoute: typeof Quests_layoutRoute
  QuestsNewRoute: typeof QuestsNewRoute
  QuestsIndexRoute: typeof QuestsIndexRoute
}

const QuestsRouteChildren: QuestsRouteChildren = {
  Quests_layoutRoute: Quests_layoutRoute,
  QuestsNewRoute: QuestsNewRoute,
  QuestsIndexRoute: QuestsIndexRoute,
}

const QuestsRouteWithChildren =
  QuestsRoute._addFileChildren(QuestsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  QuestsIdRoute: QuestsIdRoute,
  QuestsRoute: QuestsRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
